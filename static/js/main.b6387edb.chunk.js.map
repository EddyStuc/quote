{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","quote","setQuote","author","setAuthor","useEffect","fetch","then","res","json","content","className","id","onClick","target","href","encodeURI","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4LA0CeA,MAvCf,WAEA,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAwBA,OAtBAC,qBAAU,WACNC,MAAM,kCACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MACC,SAACN,GACCC,EAASD,EAAMS,SACfN,EAAUH,EAAME,aAGxB,IAcE,qBAAKQ,UAAU,MAAf,SACI,sBAAKA,UAAU,QAAQC,GAAG,YAA1B,UACE,oBAAGA,GAAG,OAAN,cAAeX,EAAf,OACA,oBAAGW,GAAG,SAAN,eAAkBT,KAClB,wBAAQQ,UAAU,MAAMC,GAAG,YAAYC,QAhB7B,WAClBP,MAAM,kCACDC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MACC,SAACN,GACCC,EAASD,EAAMS,SACfN,EAAUH,EAAME,YAUhB,0BACA,mBAAGQ,UAAU,QAAQC,GAAG,cAAcE,OAAO,SAASC,KAAMC,UAAU,gEAAtE,+BCxBKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.b6387edb.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport './App.scss';\r\n\r\nfunction App() {\r\n\r\nconst [quote, setQuote] = useState(\"\")\r\nconst [author, setAuthor] = useState(\"\")\r\n\r\nuseEffect(() => {\r\n    fetch(\"https://api.quotable.io/random\")\r\n      .then(res => res.json())\r\n      .then (\r\n        (quote) => {\r\n          setQuote(quote.content);\r\n          setAuthor(quote.author);\r\n        }\r\n      )\r\n},[]);\r\n\r\nlet fetchNewQuote = () => {\r\n  fetch(\"https://api.quotable.io/random\")\r\n      .then(res => res.json())\r\n      .then (\r\n        (quote) => {\r\n          setQuote(quote.content);\r\n          setAuthor(quote.author);\r\n        }\r\n      )\r\n}\r\n\r\nreturn (\r\n    <div className=\"App\">\r\n        <div className=\"quote\" id=\"quote-box\">\r\n          <p id=\"text\">\"{quote}\"</p>\r\n          <p id=\"author\">- {author}</p>\r\n          <button className=\"btn\" id=\"new-quote\" onClick={fetchNewQuote}>Change Quote</button>\r\n          <a className=\"tweet\" id=\"tweet-quote\" target=\"_blank\" href={encodeURI('http://www.twitter.com/intent/tweet?text=${quote} -${author}')}>Tweet Quote</a>\r\n          </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport \"./App.scss\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}